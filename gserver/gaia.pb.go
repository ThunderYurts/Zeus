// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.5.1
// source: gaia.proto

package gserver

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateCode int32

const (
	CreateCode_CREATE_SUCCESS CreateCode = 0
	CreateCode_CREATE_ERROR   CreateCode = 1
)

// Enum value maps for CreateCode.
var (
	CreateCode_name = map[int32]string{
		0: "CREATE_SUCCESS",
		1: "CREATE_ERROR",
	}
	CreateCode_value = map[string]int32{
		"CREATE_SUCCESS": 0,
		"CREATE_ERROR":   1,
	}
)

func (x CreateCode) Enum() *CreateCode {
	p := new(CreateCode)
	*p = x
	return p
}

func (x CreateCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateCode) Descriptor() protoreflect.EnumDescriptor {
	return file_gaia_proto_enumTypes[0].Descriptor()
}

func (CreateCode) Type() protoreflect.EnumType {
	return &file_gaia_proto_enumTypes[0]
}

func (x CreateCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateCode.Descriptor instead.
func (CreateCode) EnumDescriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{0}
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"` // zeus can add a yurt to a service directly
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaia_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code CreateCode `protobuf:"varint,1,opt,name=Code,proto3,enum=gserver.CreateCode" json:"Code,omitempty"`
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaia_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_gaia_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_gaia_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReply) GetCode() CreateCode {
	if x != nil {
		return x.Code
	}
	return CreateCode_CREATE_SUCCESS
}

var File_gaia_proto protoreflect.FileDescriptor

var file_gaia_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x2a, 0x32, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x32, 0x41, 0x0a, 0x05, 0x42, 0x72, 0x65, 0x65, 0x64, 0x12, 0x38, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x67, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gaia_proto_rawDescOnce sync.Once
	file_gaia_proto_rawDescData = file_gaia_proto_rawDesc
)

func file_gaia_proto_rawDescGZIP() []byte {
	file_gaia_proto_rawDescOnce.Do(func() {
		file_gaia_proto_rawDescData = protoimpl.X.CompressGZIP(file_gaia_proto_rawDescData)
	})
	return file_gaia_proto_rawDescData
}

var file_gaia_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gaia_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_gaia_proto_goTypes = []interface{}{
	(CreateCode)(0),       // 0: gserver.CreateCode
	(*CreateRequest)(nil), // 1: gserver.CreateRequest
	(*CreateReply)(nil),   // 2: gserver.CreateReply
}
var file_gaia_proto_depIdxs = []int32{
	0, // 0: gserver.CreateReply.Code:type_name -> gserver.CreateCode
	1, // 1: gserver.Breed.Create:input_type -> gserver.CreateRequest
	2, // 2: gserver.Breed.Create:output_type -> gserver.CreateReply
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gaia_proto_init() }
func file_gaia_proto_init() {
	if File_gaia_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gaia_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaia_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gaia_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gaia_proto_goTypes,
		DependencyIndexes: file_gaia_proto_depIdxs,
		EnumInfos:         file_gaia_proto_enumTypes,
		MessageInfos:      file_gaia_proto_msgTypes,
	}.Build()
	File_gaia_proto = out.File
	file_gaia_proto_rawDesc = nil
	file_gaia_proto_goTypes = nil
	file_gaia_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BreedClient is the client API for Breed service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BreedClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error)
}

type breedClient struct {
	cc grpc.ClientConnInterface
}

func NewBreedClient(cc grpc.ClientConnInterface) BreedClient {
	return &breedClient{cc}
}

func (c *breedClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateReply, error) {
	out := new(CreateReply)
	err := c.cc.Invoke(ctx, "/gserver.Breed/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BreedServer is the server API for Breed service.
type BreedServer interface {
	Create(context.Context, *CreateRequest) (*CreateReply, error)
}

// UnimplementedBreedServer can be embedded to have forward compatible implementations.
type UnimplementedBreedServer struct {
}

func (*UnimplementedBreedServer) Create(context.Context, *CreateRequest) (*CreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

func RegisterBreedServer(s *grpc.Server, srv BreedServer) {
	s.RegisterService(&_Breed_serviceDesc, srv)
}

func _Breed_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BreedServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gserver.Breed/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BreedServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Breed_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gserver.Breed",
	HandlerType: (*BreedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Breed_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gaia.proto",
}
